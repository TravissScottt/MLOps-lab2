pipeline {
    agent any

    options {
        timestamps()
        skipDefaultCheckout(true)
    }

    stages {
        stage('Clone Repository') {
            steps {
                cleanWs()
                sh 'git clone -b master https://github.com/TravissScottt/MLOps-lab2.git'
            }
        }
        
        stage('Deploy Using Docker Compose') {
            steps {
                dir('MLOps-lab2') {
                    sh '''
                        bash -c "docker pull travissscottt/api-image-2:latest && docker compose up -d"
                    '''
                }
            }
        }
        
        stage('Wait for App Ready') {
            steps {
                sh 'sleep 15'
            }
        }
        
        stage('Run Functional Tests Inside Container') {
            steps {
                sh '''
                    container_id=$(docker ps -qf "name=api-container")
                    if [ -z "$container_id" ]; then
                        echo "No container running"
                        exit 1
                    fi
                    docker exec $container_id pytest -s tests/test_func_api.py
                '''
            }
        }
    }
    
    post {
        always {
            sh '''
                docker stop api-container || true
                docker rm api-container || true
                docker stop mongodb-container || true
                docker rm mongodb-container || true
                docker rmi travissscottt/api-image-2:latest || true
                docker rmi mongo || true
                docker logout || true
            '''
            cleanWs()
        }
    }
}
