pipeline {
    agent any

    options {
        timestamps()
        skipDefaultCheckout(true)
    }

    stages {
        stage('Clone Repository') {
            steps {
                cleanWs()
                sh 'git clone -b master https://github.com/TravissScottt/MLOps-lab2.git'
            }
        }

        stage('Build Images and Run Containers') {
            steps {
                dir('MLOps-lab2') {
                    withCredentials([
                        string(credentialsId: 'mongo-username', variable: 'MONGO_USERNAME'),
                        string(credentialsId: 'mongo-password', variable: 'MONGO_PASSWORD')
                    ]) {
                        sh '''
                            echo "MONGO_USERNAME=$MONGO_USERNAME" > .env
                            echo "MONGO_PASSWORD=$MONGO_PASSWORD" >> .env
                            docker pull travissscottt/api-image-2:latest
                            docker-compose up -d
                        '''
                    }
                }
            }
        }
        
        stage('Wait for App Ready') {
            steps {
                script {
                    timeout(time: 60, unit: 'SECONDS') {
                        sh '''
                            until curl -s -o /dev/null -w "%{http_code}" http://localhost:8000/ | grep -q 200; do
                                echo "Waiting for app to be ready..."
                                sleep 2
                            done
                            echo "App is ready!"
                        '''
                    }
                }
            }
        }
        
        stage('Run Functional Tests Inside Container') {
            steps {
                sh '''
                    container_id=$(docker ps -qf "name=api-container")
                    if [ -z "$container_id" ]; then
                        echo "No container running"
                        exit 1
                    fi
                    docker exec $container_id pytest -s tests/test_func_api.py
                '''
            }
        }
    }
    
    post {
        always {
            sh '''
                docker stop api-container || true
                docker rm api-container || true
                docker stop mongodb-container || true
                docker rm mongodb-container || true
                docker rmi travissscottt/api-image-2:latest || true
                docker rmi mongo || true
                docker logout || true
            '''
            cleanWs()
        }
    }
}
